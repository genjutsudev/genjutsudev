name: Deploy

on:
  pull_request:
    branches: ["main"]

  push:
    branches: ["main"]

  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: string

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create SSH key file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Verify SSH key file
        run: |
          if [ -f ~/.ssh/id_rsa ]; then
            ls -l ~/.ssh/id_rsa
            ssh-keygen -lf ~/.ssh/id_rsa
            echo "‚úÖ SSH key file created successfully"
          else
            echo "‚ùå ERROR: SSH key file was not created"
            exit 1
          fi

      - name: Test SSH connection
        run: |
          echo "üîç Testing SSH connection..."

          if ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "echo '‚úÖ SSH connection successful'"; then
              :
          else
              echo "‚ùå ERROR: SSH connection failed"
              exit 1
          fi

      - name: Prepare deploy command
        id: prepare-deploy
        run: |
          echo "branch=${{ github.event.inputs.branch || 'main' }}" >> $GITHUB_OUTPUT
          echo "path=${{ vars.PATH_TO_PROJECT }}" >> $GITHUB_OUTPUT

      - name: Deploy via SSH
        run: |
          PATH_TO_PROJECT="${{ steps.prepare-deploy.outputs.path }}"
          BRANCH="${{ steps.prepare-deploy.outputs.branch }}"

          echo "üöÄ Deploying branch $BRANCH to $PATH_TO_PROJECT"

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "if [ -d \"$PATH_TO_PROJECT/.git\" ]; then
                cd $PATH_TO_PROJECT
                git fetch origin
                git reset --hard origin/$BRANCH
                echo '‚úÖ Successfully deployed'
             else
                echo '‚ùå ERROR: No git repository in $PATH_TO_PROJECT'
                exit 1
             fi"

      - name: Cleanup SSH key
        if: always()
        run: |
          rm -f ~/.ssh/id_rsa

          if [ ! -f ~/.ssh/id_rsa ]; then
            echo "‚úÖ SSH key file removed successfully"
          else
            echo "‚ùå ERROR: SSH key file was not removed"
            exit 1
          fi
