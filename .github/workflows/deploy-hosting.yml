name: Deploy to Hosting

on:
  pull_request:
    types: [closed]
    branches: [ "main" ]

  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: string

jobs:
  deploy-prod:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no \
            -o ConnectTimeout=10 \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "echo '‚úÖ SSH connection successful'"
        
      - name: Deploy via SSH (prod)
        run: |
          PATH_TO_PROJECT="${{ vars.PATH_TO_PROJECT }}"
          BRANCH="main"

          echo "üöÄ Deploying branch $BRANCH to $PATH_TO_PROJECT"

          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "if [ -d \"$PATH_TO_PROJECT/.git\" ]; then
                cd $PATH_TO_PROJECT
                git fetch origin
                git reset --hard origin/$BRANCH
                echo '‚úÖ Successfully deployed'
             else
                echo '‚ùå ERROR: No git repository in $PATH_TO_PROJECT'
                exit 1
             fi"

  deploy-dev:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Test SSH connection
        run: |
          echo "Testing SSH connection to ${{ secrets.SSH_HOST }}"
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
            -o ConnectTimeout=10 \
            -o BatchMode=yes \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "echo '‚úÖ SSH connection successful'"
        
      - name: Deploy via SSH (dev)
        run: |
          PATH_TO_PROJECT="${{ secrets.PATH_TO_PROJECT }}"
          BRANCH="${{ github.event.inputs.branch }}"

          echo "üöÄ Deploying branch $BRANCH to $PATH_TO_PROJECT"

          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "if [ -d \"$PATH_TO_PROJECT/.git\" ]; then
                cd $PATH_TO_PROJECT
                git fetch origin
                git reset --hard origin/$BRANCH
                echo '‚úÖ Successfully deployed'
             else
                echo '‚ùå ERROR: No git repository in $PATH_TO_PROJECT'
                exit 1
             fi"
