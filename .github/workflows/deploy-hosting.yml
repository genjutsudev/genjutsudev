name: Deploy to Hosting

on:
  pull_request:
    types: [closed]
    branches: [ "main" ]

  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: string

jobs:
  deploy-prod:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Deploy via SSH (prod)
        run: |
          SERVER_DIR="${{ secrets.SERVER_DIR }}"
          BRANCH="main"

          echo "üöÄ Deploying branch $BRANCH to $SERVER_DIR"

          sshpass -p "${{ secrets.FTP_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
            ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} \
            "if [ -d \"$SERVER_DIR/.git\" ]; then
                cd $SERVER_DIR
                git fetch origin
                git reset --hard origin/$BRANCH
                echo '‚úÖ Successfully deployed'
             else
                echo '‚ùå ERROR: No git repository in $SERVER_DIR'
                exit 1
             fi"

  deploy-dev:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Deploy via SSH (dev)
        run: |
          SERVER_DIR="${{ secrets.SERVER_DIR }}"
          BRANCH="${{ github.event.inputs.branch }}"

          echo "üöÄ Deploying branch $BRANCH to $SERVER_DIR"

          sshpass -p "${{ secrets.FTP_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
            ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} \
            "if [ -d \"$SERVER_DIR/.git\" ]; then
                cd $SERVER_DIR
                git fetch origin
                git reset --hard origin/$BRANCH
                echo '‚úÖ Successfully deployed'
             else
                echo '‚ùå ERROR: No git repository in $SERVER_DIR'
                exit 1
             fi"
